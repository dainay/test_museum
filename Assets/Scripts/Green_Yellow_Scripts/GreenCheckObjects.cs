using UnityEngine;
using System.Collections.Generic;

public class GreenCheckObjects : MonoBehaviour
{
    private Light spotLight;
    private bool isObjectPlaced = false;

    private static HashSet<string> requiredObjects = new HashSet<string> { "violette", "ballon", "feuille" };
    private static HashSet<string> placedObjects = new HashSet<string>();

    public GreenCameraLookAt cameraScript; // üé• R√©f√©rence au script de la cam√©ra

    void Start()
    {
        // üåü D√©finit la lumi√®re ambiante en blanc d√®s le d√©part
        RenderSettings.ambientLight = Color.white;

        spotLight = transform.Find("SpotLight")?.GetComponent<Light>();

        if (spotLight == null)
        {
            Debug.LogWarning("‚ö†Ô∏è Aucune lumi√®re 'SpotLight' trouv√©e !");
        }
        else
        {
            spotLight.intensity = 0;
        }

        if (cameraScript == null)
        {
            Debug.LogError("‚ùå CameraLookAt n'est pas assign√© dans CheckObjects !");
        }
    }
    void OnTriggerStay(Collider other)
    {
        if (spotLight == null) return;

        string objName = other.gameObject.name;

        // Si l'objet appartient au joueur, on ne le traite pas
        if (other.gameObject.CompareTag("Player")) return;

        // Si l'objet fait partie des objets requis
        if (requiredObjects.Contains(objName))
        {
            // Si l'objet n'est pas encore dans la liste des objets plac√©s
            if (!placedObjects.Contains(objName))
            {
                spotLight.intensity = 50;
                spotLight.color = Color.green;  // Lumi√®re verte
                placedObjects.Add(objName);
                Debug.Log($"‚úÖ {objName} ajout√© !");
            }
        }
        else
        {
            // Si l'objet n'est pas requis et est pos√©, on affiche la couleur rouge
            spotLight.intensity = 100;
            spotLight.color = Color.red;  // Lumi√®re rouge
            isObjectPlaced = true;
        }

        // V√©rifie la condition de victoire
        CheckWinCondition();
    }

    void OnTriggerExit(Collider other)
    {
        if (spotLight == null) return;
        string objName = other.gameObject.name;

        if (isObjectPlaced)
        {
            isObjectPlaced = false;
            spotLight.intensity = 0;
            Debug.Log("üí° Objet retir√©, la lumi√®re s'√©teint !");
        }

        placedObjects.Remove(objName);
        CheckWinCondition();
    }

    void CheckWinCondition()
    {
        // Si tous les objets n√©cessaires sont plac√©s correctement
        if (placedObjects.SetEquals(requiredObjects))
        {
            Debug.Log("üéâ VICTOIRE ! Tous les objets corrects sont plac√©s !");

            // ‚è≥ Attendre 3 secondes avant d'ex√©cuter Victory()
            Invoke("Victory", 3f);
        }
    }

    void Victory()
    {
        Debug.Log("üèÜ F√©licitations ! La cam√©ra va tourner !");

        // Change l'ambient light en blanc lors de la victoire
        RenderSettings.ambientLight = Color.white;

        if (cameraScript != null)
        {
            cameraScript.StartCameraRotation();
        }
        else
        {
            Debug.LogError("‚ùå La cam√©ra n'est pas assign√©e dans l'Inspector !");
        }
    }

}
